name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .env file for Docker build
      run: |
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" > .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
        echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> .env
        echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> .env
        echo "SMTP_SERVER=${{ secrets.SMTP_SERVER }}" >> .env
        echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> .env
        echo "RECEIVER_EMAIL=${{ secrets.RECEIVER_EMAIL }}" >> .env
        echo "DATABASE_URI=postgresql+psycopg2://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@db:5432/${{ secrets.POSTGRES_DB }}" >> .env

    - name: Build Docker images
      run: docker-compose build
      env:
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        RECEIVER_EMAIL: ${{ secrets.RECEIVER_EMAIL }}
        DATABASE_URI: ${{ secrets.DATABASE_URI }}

    - name: Archive project directory
      run: tar -czf project.tar.gz *
      working-directory: .

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add VPS to known_hosts
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.VPS_HOST }} ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDRR5bsPk+wlOCbwaSTrmYikwuxHOP0ZLxgVYZUIz7VLcAwXzy+VbEiC2OSpiz7qz2HpWCAwiOfHMs5rh5r15Lsp0QUAKHOX28DSd8EB044aQbhgHlL6m/a+HeJQbqTLSEfStwqqjjOdrRVGzHUBG8eMh57kngBDTWPTF5MXqZIopaTP5cL8VtwBULRqOAKu5PSYwhnE1CbimDyasoaRrZI3sp/0sD6Z/2/4II/PzleK6sGN+fY2Kg7pgIxYaP9Gmhn/nfSBQu29EsJE605nIr5oyLOxdN6TI5Tp5pHNlUk37axUVWnPQuhqBG51uWH976z/ZoZGVOB/MUMcQzGiS+rxBlBn95EKdhbXSPvDeX3exT+O8orJqB66YyL5gi6BlEUtzvBjvpMISH/HbNni6EcupkhPGyzpcmTDjfRQWZ/eIiQ3OFmcDYyxLupLxRAUCVITUoiGsshupRVDps/9aUPEcM2tguBXRT5BZq3Sd7MGfisOObuL7lqW2aWLAsfutc=" >> ~/.ssh/known_hosts

    - name: Copy project archive to VPS
      run: scp project.tar.gz ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/root/CRESSON

    - name: Extract project archive on VPS and set up environment
      run: |
        ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
        cd /root/CRESSON
        tar -xzf project.tar.gz
        rm project.tar.gz
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" > .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
        echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> .env
        echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> .env
        echo "SMTP_SERVER=${{ secrets.SMTP_SERVER }}" >> .env
        echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> .env
        echo "RECEIVER_EMAIL=${{ secrets.RECEIVER_EMAIL }}" >> .env
        echo "DATABASE_URI=postgresql+psycopg2://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@db:5432/${{ secrets.POSTGRES_DB }}" >> .env
        docker-compose down
        docker-compose up -d
        sleep 10  # Attendre quelques secondes pour que les conteneurs d√©marrent
        docker-compose exec backend flask db upgrade  # Appliquer les migrations
        docker-compose logs backend
        EOF
      env:
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        RECEIVER_EMAIL: ${{ secrets.RECEIVER_EMAIL }}
        DATABASE_URI: ${{ secrets.DATABASE_URI }}
